
# АГЕНТ
# Текущие значения рядов (состояние) подаётся на входы нейросети,
# на выходах считывается действие (покупать/продавать/ничего),
# действие выполняется,
# запоминается профит, как в случае выхода с рынка.

# ГЕНЕТИЧЕСКИЙ АЛГОРИТМ
# Раз в несколько тиков популяция обновляется.
## В первой реализации достаточно обновлять популяцию после прогона по всей истории.
# Места индивидов с худшими показателями занимаются потомками лучших индивидов.
# Потомок находится, путём случайной перекомбинации значений весов нейронов родителей с небольшой вероятностью мутации.
# Имеет смысл прогонять потомка по предыдущей истории, так как он может попасть в отрезок,
# где очевидно плохая стратегия может быстро выбиться вперёд, а потом всё слить.

# ВХОДНЫЕ ДАННЫЕ
# Обучение должно проходить на данных BTC/USDT и USDT/RUB (возможно ещё USD/RUB_TOD от ММВБ).
# Торгуется USDT/RUB.

# НОРМАЛИЗАЦИЯ ВХОДНЫХ ДАННЫХ
# ?

# АРХИТЕКТУРЫ НЕЙРОСЕТЕЙ
# LSTM(N_steps x N_features) -> DNN -> DNN -> DNN(Output)
# LSTM(N_steps x N_features) -> DNN -> DNN(Output)
# LSTM(1 x N_features) -> DNN -> DNN -> DNN(Output)
# DNN(N_steps x N_features) -> DNN -> DNN -> DNN(Output)

